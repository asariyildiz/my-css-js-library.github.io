@use "sass:math";

$grid-columns: 12;
$grid-gaps: (
    "0": 0,
    "1": 10px,
    "2": 20px,
    "3": 30px,
);
$layout-values: sa-flex-start, sa-flex-end, sa-center, sa-space-between, sa-space-around;

// base layout classes

.container {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
    box-sizing: border-box;
}
.row {
    display: flex;
    flex-flow: row wrap;
}

//grid gaps
@each $key, $val in $grid-gaps{
    .gap-#{$key} > * {
        padding: $val;
    }
    .gap-#{$key} {
        margin-left: -$val;
        margin-right: -$val;
    }
}
// kustify content classes
@each $val in $layout-values {
    .justify-#{$val} {
        justify-content: $val;
    }
}

// col classes
@include sa-extra-small {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-sa-ekstra-small {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns)
        }
    }
}
@include sa-small {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-sa-small {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns)
        }
    }
}
@include sa-medium {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-sa-medium {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns)
        }
    }
}
@include sa-large{
    @for $i from 1 through $grid-columns {
        .col-#{$i}-sa-large {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns)
        }
    }
}
@include sa-extra-large {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-sa-ekstra-large {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns)
        }
    }
}