@use 'sass:math';

$utilities: (
    "padding": (
        "prefix": "sa-p",
        "values": (
            "0": 0,
            "1": $base-padding,
            "2": $base-padding * 2,
            "3": $base-padding * 4,
            "4": $base-padding * 6,
            "5": $base-padding * 8
        ),
    ),
    "padding-left": (
        "prefix": "sa-p-left",
        "values": (
            "0": 0,
            "1": $base-padding,
            "2": $base-padding * 2,
            "3": $base-padding * 4,
            "4": $base-padding * 6,
            "5": $base-padding * 8
        ),
    ),
    "padding-right": (
        "prefix": "sa-p-right",
        "values": (
            "0": 0,
            "1": $base-padding,
            "2": $base-padding * 2,
            "3": $base-padding * 4,
            "4": $base-padding * 6,
            "5": $base-padding * 8
        ),
    ),
    "padding-top": (
        "prefix": "sa-p-top",
        "values": (
            "0": 0,
            "1": $base-padding,
            "2": $base-padding * 2,
            "3": $base-padding * 4,
            "4": $base-padding * 6,
            "5": $base-padding * 8
        ),
    ),
    "padding-bottom": (
        "prefix": "sa-p-bottom",
        "values": (
            "0": 0,
            "1": $base-padding,
            "2": $base-padding * 2,
            "3": $base-padding * 4,
            "4": $base-padding * 6,
            "5": $base-padding * 8
        ),
    ),
    "margin": (
        "prefix": "sa-m",
        "values": (
            "0": 0,
            "1": $base-margin,
            "2": $base-margin * 2,
            "3": $base-margin * 4,
            "4": $base-margin * 6,
            "5": $base-margin * 8
        ),
    ),
    "margin-left": (
        "prefix": "sa-m-left",
        "values": (
            "0": 0,
            "1": $base-margin,
            "2": $base-margin * 2,
            "3": $base-margin * 4,
            "4": $base-margin * 6,
            "5": $base-margin * 8
        ),
    ),
    "margin-right": (
        "prefix": "sa-m-right",
        "values": (
            "0": 0,
            "1": $base-margin,
            "2": $base-margin * 2,
            "3": $base-margin * 4,
            "4": $base-margin * 6,
            "5": $base-margin * 8
        ),
    ),
    "margin-top": (
        "prefix": "sa-m-top",
        "values": (
            "0": 0,
            "1": $base-margin,
            "2": $base-margin * 2,
            "3": $base-margin * 4,
            "4": $base-margin * 6,
            "5": $base-margin * 8
        ),
    ),
    "margin-bottom": (
        "prefix": "sa-m-bottom",
        "values": (
            "0": 0,
            "1": $base-margin,
            "2": $base-margin * 2,
            "3": $base-margin * 4,
            "4": $base-margin * 6,
            "5": $base-margin * 8
        ),
    ),

    "opacity": (
        "prefix": "sa-o",
        "values": (
            "10": 0.1,
            "20": 0.2,
            "30": 0.3,
            "40": 0.4,
            "50": 0.5,
            "60": 0.6,
            "70": 0.7,
            "80": 0.8,
            "90": 0.9,
            "100": 1,
        ),
    ),

    "border-radius": (
        "prefix": "sa-br",
        "values": (
            "default": $base-border-radius,
            "none": 0,
            "ekstra-small": math.div($base-border-radius, 4),
            "small": math.div($base-border-radius, 2),
            "large": math.div($base-border-radius, $base-border-radius * 2),
            "full": 50%,
        ),
    ),

    "display": (
        "prefix": "sa-display",
        "values": (
            "sa-n": none,
            "sa-b": block,
            "sa-f": flex,
            "sa-i": inline,
            "sa-i-b": inline-block
        ),
    ),

    "font-size": (
        "prefix": "sa-font-size",
        "values": (
            "small": $font-size-small,
            "medium": $base-font-size,
            "large": $font-size-large,
            "extra-large": $font-size-extralarge,
            "extra-extra-large":  $font-size-extraextralarge
        ),
    ),
);

//generate utilities classes
@each $property, $map in $utilities {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
        @if($k == "default") {
            .#{$prefix} {
                #{$property}: $v;
            }
        } @else {
            .#{$prefix}-#{$k} {
                #{$property}: $v;
            }
        }
    }
}
